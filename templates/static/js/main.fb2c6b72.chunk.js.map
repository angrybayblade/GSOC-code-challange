{"version":3,"sources":["Gallery.js","upload.svg","Upload.js","BoxBar.js","Box.js","Canvas.js","Loader.js","App.js","serviceWorker.js","index.js"],"names":["Gallery","props","className","gallery","data","map","img","i","name","image","key","onClick","loaderState","imageState","cState","boxes","canvas","undefined","clsState","classes","src","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","id","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","Upload","type","onChange","upload","htmlFor","BoxBar","cls","cl","value","selectClass","defaultChecked","render","style","border","color","backgroundColor","Box","box","position","left","xmin","top","ymin","height","ymax","width","xmax","box_color","background","padding","fontSize","fontWeight","letterSpacing","class","mask","Canvas","c","Loader","App","React","useState","tut","tutState","loader","galleryState","e","a","formData","FormData","append","files","axios","url","method","then","response","ReactHtmlParser","reverse","push","r","Number","checked","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb2c6b72.chunk.js","sourcesContent":["import React from 'react';\n\nconst Gallery = (props) =>{\n    return(\n    <div className=\"images\">\n        {\n            props.gallery.data.map((img,i)=>{\n            return(\n                <div \n                className={img.name === props.image.name ? \"img-div img-selected\" : \"img-div\"} \n                key={i} \n                onClick={()=>{\n                        props.loaderState({data:true})\n                        props.imageState(img);\n                        props.cState({data:img.boxes,canvas:undefined})\n                        props.clsState({\n                            data:[... img.classes]\n                        })\n                        props.loaderState({data:false})\n                    }\n                } \n                >\n                <img className={img.name === props.image.name ? \"img selected\" : undefined} src={img.image}  />\n                </div>\n            )\n            })\n        }\n        </div>\n    )\n}\n\nexport default Gallery;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M33.125,35H6.875c-0.519,0-0.938-0.421-0.938-0.938v-5.75c0-0.519,0.419-0.938,0.938-0.938c0.518,0,0.938,0.42,0.938,0.938 v4.813h24.375v-4.813c0-0.519,0.419-0.938,0.938-0.938c0.518,0,0.938,0.42,0.938,0.938v5.75C34.063,34.579,33.643,35,33.125,35\"\n}), React.createElement(\"path\", {\n  d: \"M27.576,14.153c-0.234,0-0.47-0.087-0.651-0.264L20.041,7.24l-6.884,6.649c-0.371,0.36-0.965,0.351-1.325-0.021 c-0.359-0.374-0.349-0.966,0.024-1.326l7.535-7.277c0.362-0.354,0.939-0.354,1.301,0l7.535,7.277 c0.373,0.36,0.383,0.952,0.023,1.326C28.065,14.057,27.821,14.153,27.576,14.153\"\n}), React.createElement(\"path\", {\n  d: \"M20.041,29.248c-0.518,0-0.937-0.42-0.937-0.937V5.937C19.104,5.421,19.523,5,20.041,5c0.519,0,0.938,0.421,0.938,0.937 v22.375C20.979,28.828,20.56,29.248,20.041,29.248\"\n}));\n\nvar SvgUpload = function SvgUpload(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 40 40\",\n    enableBackground: \"new 0 0 40 40\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgUpload, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/upload.86dd947c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { ReactComponent as UploadLogo } from './upload.svg';\n\nconst Upload = (props) =>{\n    return(\n        <div className={\"upload\"}>\n            <input type=\"file\" name=\"image\" id=\"image\" className=\"file-upload\" onChange={props.upload} />\n            <label htmlFor=\"image\" className=\"label-drag\">\n            <UploadLogo />\n        </label>\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react';\n\n\nconst BoxBar = (props) =>{\n    return(\n        <div className=\"box-panel\">\n            <div className=\"image-name\">\n              {typeof(props.image.name) == \"string\" ? props.image.name : \"Select Image\"}\n            </div>\n            <div className={\"box-rows\"}>\n            {\n                props.cls.data.map((cl,i)=>{\n                  return (\n                    <div key={i} className=\"box-row\">\n                      {cl.name}\n                      <input type=\"checkbox\" id={\"checkbox-\"+i} value={i} onChange={props.selectClass} defaultChecked={cl.render} />\n                        <label style={{\n                                border: cl.color+\" solid 3px\",\n                                backgroundColor: cl.render ? cl.color : \"white\"\n                            }}\n                            className=\"checkbox\" \n                            htmlFor={\"checkbox-\"+i}\n                        >\n                        </label>\n                    </div>\n                  )\n                }) \n              }\n            </div>\n        </div>\n    )\n}\n\n\nexport default BoxBar;","import React from 'react';\n\nconst Box = (props) => {\n    let box = props.box;\n    return(\n        <div \n            className=\"box\" style={{\n                position:\"absolute\",\n                left:box.box.xmin-5,\n                top:box.box.ymin-10,\n                height:box.box.ymax - box.box.ymin+10,\n                width:box.box.xmax - box.box.xmin+5,\n                border:box.box_color+\" solid 2px\"\n            }} \n        >\n            <div style={{\n                background:box.box_color,\n                color:\"rgba(0,0,0,0.95)\",\n                padding:\"2x\",\n                fontSize:\"1.2vh\",\n                fontWeight:\"500\",\n                letterSpacing:\"1px\",\n            }}>\n                {box.class}\n            </div>\n            {box.mask}\n        </div>\n    )\n}\n\nexport default Box;","import React from 'react';\nimport Box from './Box';\n\nconst Canvas = (props) =>{\n    return(\n        <div className=\"image-canvas\">\n            <div className=\"draw\"> \n                <div className=\"img\">\n                    <div className=\"canvas\">\n                    {\n                        props.c.data.map((box,i)=>{\n                        if (box.render !== false){\n                            return <Box box={box} key={i} />\n                        }\n                        else{\n                            return undefined\n                        }\n                        })\n                    }\n                    </div>\n                    <img src={props.image.image} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Canvas;","import React from 'react';\n\nconst Loader = (props) =>{\n    return (\n        <div className=\"loader\">\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport  default Loader;","import React from 'react';\nimport axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\nimport './App.css';\n\n\nimport Gallery from './Gallery';\nimport Upload from './Upload';\nimport BoxBar from './BoxBar';\nimport Canvas from './Canvas';\nimport Loader from './Loader';\n\nfunction App() {\n\n  let i,p=\"1.px\";\n  let [image,imageState] = React.useState({\n    name:undefined,\n  });\n\n  let [c,cState] = React.useState({\n    data:[]\n  })\n\n  let [cls,clsState] = React.useState({\n    data:[]\n  })\n\n  let [tut,tutState] = React.useState({\n    data:0\n  })\n\n  let [loader,loaderState] = React.useState({\n    data:false\n  })\n\n  let [gallery,galleryState] = React.useState({data:[]});\n\n  async function upload(e){\n    loaderState({\n      data:true\n    })\n    const formData = new FormData();\n    formData.append(\"image\",e.target.files[0])\n    formData.append(\"type\",1)\n    await axios({\n      url:\"http://localhost:5000/predict\",\n      method:\"POST\",\n      data:formData\n    }).then((response)=>{\n      response.data.boxes = response.data.boxes.map((box,i)=>{    \n        let {mask} = box;          \n        box.mask = (\n            <div>\n              {ReactHtmlParser(mask)}\n            </div>\n          )\n\n        return box\n      })\n\n      let {data} = gallery\n      data.reverse();\n      data.push(response.data);\n      data.reverse();\n      galleryState({\n        data:data\n      });     \n      imageState(response.data)\n      cState({\n        data:response.data.boxes\n      })\n      clsState({\n        data:[... response.data.classes]\n      })\n      tutState({\n        data:tut.data + 1\n      })\n      loaderState({\n        data:false\n      })\n    })\n  }\n\n  const selectClass = (e) =>{   \n    let r = {};\n    let box = Number(e.target.value);\n    var {data} = cls;\n    data[box].render = e.target.checked\n    clsState({\n      data:data\n    })\n\n    for(i in data){\n      r[data[i].name] = data[i].render\n    }\n    \n\n\n    var {boxes} = image;\n    data = boxes.map((box,i)=>{\n      box.render = r[box.class]\n      return box\n    })\n\n    image = {... image}\n    image.boxes = data\n    imageState({... image})\n\n    tutState({\n      data:100\n    })\n\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <div className=\"panel\">\n          {\n            loader.data ?\n              <Loader />\n                : \n          <Canvas \n            c={c} \n            image={image} \n          />\n          }\n         {\n            typeof(image.name) === \"string\" ?\n              <BoxBar \n                image={image} \n                cls={cls} \n                selectClass={selectClass} \n                tut={tut}\n              />\n              :\n              undefined\n          }\n        </div>\n        <div className=\"gallery\">\n          <Upload \n            upload={upload} \n          />\n          <Gallery \n            gallery={gallery}\n            cState={cState}\n            clsState={clsState}\n            imageState={imageState}\n            image = {image} \n            loaderState={loaderState}\n          />\n        </div>\n      </div>\n      <div className={tut.data === 0 ? \"upload-tut\" : undefined}></div>\n      <div className={tut.data === 1 ? \"box-tut\" : undefined}></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}